<h1>ANSIC</h1>
<h2>上課內容</h2>
<p>1.<span>寫一個 C 程序，接受兩個商品的重量和購買數量（浮點值）併計算它們的平均值</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

int main() 
{
    double wi1, ci1, wi2, ci2, result; // 宣告變數表示重量和數量

    // 提示使用者輸入 item 1 的重量
    printf("Weight - Item1: ");
    if (scanf("%lf", &amp;wi1) != 1) { // 讀取並檢查輸入值
        printf("Error: Please enter a valid number.\n"); // 如果輸入無效，輸出錯誤訊息
        return 1; // 返回非零值表示程式出錯
    }
    
    // 提示使用者輸入 item 1 的數量
    printf("No. of item1: ");
    if (scanf("%lf", &amp;ci1) != 1) { // 讀取並檢查輸入值
        printf("Error: Please enter a valid number.\n"); // 如果輸入無效，輸出錯誤訊息
        return 1; // 返回非零值表示程式出錯
    }
    
    // 提示使用者輸入 item 2 的重量
    printf("Weight - Item2: ");
    if (scanf("%lf", &amp;wi2) != 1) { // 讀取並檢查輸入值
        printf("Error: Please enter a valid number.\n"); // 如果輸入無效，輸出錯誤訊息
        return 1; // 返回非零值表示程式出錯
    }
    
    // 提示使用者輸入 item 2 的數量
    printf("No. of item2: ");
    if (scanf("%lf", &amp;ci2) != 1) { // 讀取並檢查輸入值
        printf("Error: Please enter a valid number.\n"); // 如果輸入無效，輸出錯誤訊息
        return 1; // 返回非零值表示程式出錯
    }
    
    // 計算平均值
    result = ((wi1 * ci1) + (wi2 * ci2)) / (ci1 + ci2);
    
    // 輸出平均值
    printf("Average Value = %f\n", result);
    
    return 0; // 返回零表示程式正常結束
}
</pre>
<p><img alt="" height="142" src="/images/11.png" width="400"/></p>
<p><br/>2.<span>寫一個 C 程序，接受員工的 ID、一個月的總工作時間、他每小時收到的金額</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

int main() {
    char id[10];         // 宣告變數表示員工ID（最多10個字元）
    int hour;            // 宣告變數表示工作時數
    double value, salary; // 宣告變數表示每小時薪水和總薪水

    // 使用一個變數存儲 scanf 的返回值以避免警告
    int result;

    // 提示用戶輸入員工ID
    printf("Input the Employees ID(Max. 10 chars): ");
    result = scanf("%9s", id); // 讀取並檢查輸入的ID，限制最多讀取9個字元

    if (result != 1) { // 檢查 scanf 的返回值
        printf("Error: Please enter a valid Employee ID.\n");
        return 1; // 返回1表示出錯
    }

    // ... 以下略，後續的程式碼保持不變 ...

    return 0; // 返回0表示程式正常結束
}
</pre>
<p><img alt="" height="24" src="/images/12.png" width="400"/></p>
<p><br/>3.<span>寫一個 C 程序，接受三個整數並找出三個整數中的最大值</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

int main()
{
    int x, y, z, result, max; // 宣告變數

    // 提示用戶輸入第一個整數並存儲在 'x' 中
    printf("\nInput the first integer: ");
    if (scanf("%d", &amp;x) != 1) { // 檢查 scanf 的返回值
        printf("Error: Please enter a valid integer.\n");
        return 1; // 返回1表示出錯
    }

    // 提示用戶輸入第二個整數並存儲在 'y' 中
    printf("\nInput the second integer: ");
    if (scanf("%d", &amp;y) != 1) { // 檢查 scanf 的返回值
        printf("Error: Please enter a valid integer.\n");
        return 1; // 返回1表示出錯
    }

    // 提示用戶輸入第三個整數並存儲在 'z' 中
    printf("\nInput the third integer: ");
    if (scanf("%d", &amp;z) != 1) { // 檢查 scanf 的返回值
        printf("Error: Please enter a valid integer.\n");
        return 1; // 返回1表示出錯
    }

    // 計算結果
    result = (x + y + abs(x - y)) / 2;

    // 計算最大值
    max = (result + z + abs(result - z)) / 2;

    // 輸出最大值
    printf("\nMaximum value of three integers: %d\n", max);

    return 0; // 返回0表示程式正常結束
}</pre>
<p><img alt="" height="110" src="/images/13.png" width="400"/></p>
<p><br/>4.<span>寫一個 C 程序，根據給定的總行駛距離（整數值）（以公里為單位）和用過的燃料（以公升為單位，浮點數 - 2 位小數）計算自行車的平均消耗量</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

int main() 
{
    int x;    // 用來儲存總行駛公里數
    float y;  // 用來儲存總耗油量

    // 提示用戶輸入總行駛公里數並存儲在 'x' 中
    printf("Input total distance in km: ");
    if (scanf("%d", &amp;x) != 1) { // 檢查 scanf 的返回值
        printf("Error: Please enter a valid integer.\n");
        return 1; // 返回1表示出錯
    }

    // 提示用戶輸入總耗油量並存儲在 'y' 中
    printf("Input total fuel spent in liters: ");
    if (scanf("%f", &amp;y) != 1) { // 檢查 scanf 的返回值
        printf("Error: Please enter a valid float number.\n");
        return 1; // 返回1表示出錯
    }

    // 檢查總耗油量是否為0，以避免除以0的情況
    if (y == 0) {
        printf("Error: Total fuel spent cannot be zero.\n");
        return 1; // 返回1表示出錯
    }

    // 計算並輸出平均油耗
    printf("Average consumption (km/lt): %.3f\n", x / y);

    return 0; // 返回0表示程式正常結束
}
</pre>
<p><img alt="" height="73" src="/images/14.png" width="400"/></p>
<p><br/>5.<span>用 C 語言寫一個程序，使用函數求任意數字的平方</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

double square(double num) {
    return (num * num);
}

int main() {
    int num;
    double n;
    int scanfResult; // 變數用於儲存 scanf 的返回值

    printf("\n\n 函式：計算任意數字的平方值 :\n");
    printf("------------------------------------------------\n");

    printf("輸入任意數字以計算平方值：");
    scanfResult = scanf("%d", &amp;num); // 將 scanf 的返回值儲存在變數中

    if (scanfResult != 1) {
        printf("輸入錯誤或無效的數字。\n");
        return 1; // 適當的錯誤處理
    }

    n = square(num);
    printf("%d 的平方是：%.2f\n", num, n);

    return 0;
}</pre>
<p><img alt="" height="92" src="/images/15.png" width="400"/></p>
<p><br/>6.<span>用 C 語言寫一個程序，使用函數交換兩個數字</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include&lt;stdio.h&gt;

void swap(int *, int *);

int main() {
    int n1, n2;
    int scanfResult1, scanfResult2; // 儲存 scanf 函式的返回值

    printf("\n\n 函式 : 使用函式交換兩個數字 :\n");
    printf("------------------------------------------------\n");

    printf("輸入第一個數字 : ");
    scanfResult1 = scanf("%d", &amp;n1); // 儲存 scanf 函式的返回值

    printf("輸入第二個數字 : ");
    scanfResult2 = scanf("%d", &amp;n2); // 儲存 scanf 函式的返回值

    // 檢查 scanf 的返回值
    if (scanfResult1 != 1 || scanfResult2 != 1) {
        printf("錯誤的輸入。\n");
        return 1; // 適當的錯誤處理
    }

    printf("交換前 : n1 = %d, n2 = %d ", n1, n2);
    swap(&amp;n1, &amp;n2);
    printf("\n交換後 : n1 = %d, n2 = %d \n\n", n1, n2);
    
    return 0;
}

void swap(int *p, int *q) {
    int tmp;
    tmp = *p;
    *p = *q;
    *q = tmp;
}</pre>
<p></p>
<p><img alt="" height="110" src="/images/16.png" width="400"/></p>
<p><br/>7.<span>使用函數檢查給定數字是偶數還是奇數</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

int checkOddEven(int n1)
{   
    return (n1 &amp; 1);
}

int main()
{
    int n1;
    int scanfResult; // 儲存 scanf 函式的返回值

    printf("\n\n 函式：檢查數字是奇數還是偶數：\n");
    printf("------------------------------------------------\n");

    printf("輸入任意數字：");
    scanfResult = scanf("%d", &amp;n1); // 儲存 scanf 函式的返回值

    if (scanfResult != 1) {
        printf("無效的輸入。\n");
        return 1; // 適當的錯誤處理
    }

    if(checkOddEven(n1))
    {
        printf("輸入的數字是奇數。\n\n");
    }
    else
    {
        printf("輸入的數字是偶數。\n\n");
    }
    return 0;
}</pre>
<p></p>
<p><img alt="" height="88" src="/images/17.png" width="400"/></p>
<p><br/>8.<span>使用函數求 1!/1+2!/2+3!/3+4!/4+5!/5 數列的和</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

int fact(int);

int main() {
    int sum;
    // 計算數列總和：1!/1 + 2!/2 + 3!/3 + 4!/4 + 5!/5
    sum = fact(1) / 1 + fact(2) / 2 + fact(3) / 3 + fact(4) / 4 + fact(5) / 5;

    printf("\n\n 函式：計算數列 1!/1 + 2!/2 + 3!/3 + 4!/4 + 5!/5 的總和 :\n");
    printf("----------------------------------------------------------\n");

    printf("數列總和為 : %d\n\n", sum);
    return 0;
}

// 計算階乘的函式
int fact(int n) {
    int num = 0, f = 1;

    // 計算階乘
    while (num &lt;= n - 1) {
        f = f + f * num; // 這裡的階乘計算方式可能不正確
        num++;
    }
    return f;
}</pre>
<p><img alt="" height="81" src="/images/18.png" width="400"/></p>
<p><br/>9.<span>使用函數將十進制數轉換為二進制數</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include&lt;stdio.h&gt;

long toBin(int);

int main()
{
    long bno;
    int dno;
    int scanfResult; // 儲存 scanf 函式的返回值

    printf("\n\n 函式 : 十進制轉二進制 :\n");
    printf("-------------------------------------------\n");
    printf(" 輸入任意十進制數字 : ");

    scanfResult = scanf("%d", &amp;dno); // 儲存 scanf 函式的返回值

    if (scanfResult != 1) {
        printf("輸入錯誤或無效的數字。\n");
        return 1; // 適當的錯誤處理
    }

    bno = toBin(dno);
    printf("\n 二進制值為 : %ld\n\n", bno);

    return 0;
}

long toBin(int dno)
{
    long bno = 0, remainder, f = 1;
    while(dno != 0)
    {
        remainder = dno % 2;
        bno = bno + remainder * f;
        f = f * 10;
        dno = dno / 2;
    }
    return bno;
}</pre>
<p><img alt="" height="98" src="/images/19.png" width="400"/></p>
<p><br/>10.<span>使用函數檢查一個數是否為質數</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;

int PrimeOrNot(int);

int main() {
    int n1, prime;
    int scanfResult; // 儲存 scanf 函式的返回值

    printf("\n\n 函式 : 檢查一個數字是否為質數 :\n");
    printf("---------------------------------------------------------------\n");

    printf(" 輸入一個正數 : ");
    scanfResult = scanf("%d", &amp;n1); // 儲存 scanf 函式的返回值

    // 檢查 scanf 的返回值以確保成功讀取一個整數
    if (scanfResult != 1) {
        printf("輸入無效。\n");
        return 1; // 適當的錯誤處理
    }

    prime = PrimeOrNot(n1);

    if (prime == 1)
        printf(" 數字 %d 是質數。\n", n1);
    else
        printf(" 數字 %d 不是質數。\n", n1);

    return 0;
}

int PrimeOrNot(int n1) {
    int i = 2;
    while (i &lt;= n1 / 2) {
        if (n1 % i == 0)
            return 0; // 若能被除了1和自身以外的數整除，則不是質數
        else
            i++;
    }
    return 1; // 若無法被其他數整除，則是質數
}</pre>
<p><img alt="" height="85" src="/images/20.png" width="400"/></p>
<p><video controls="controls" height="630" width="1008">
<source src="/images/20.mp4" type="video/mp4"/></video></p>
<h1>About</h1>
<p><a href="https://github.com/mdecycu/cmsite"> https://github.com/mdecycu/cmsite </a></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>