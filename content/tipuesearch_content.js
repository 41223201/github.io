var tipuesearch = {"pages": [{'title': 'ANSIC', 'text': '', 'tags': '', 'url': 'ANSIC.html'}, {'title': '上課內容', 'text': '1. 寫一個 C 程序，接受兩個商品的重量和購買數量（浮點值）併計算它們的平均值 \n #include <stdio.h>\n\nint main() \n{\n    double wi1, ci1, wi2, ci2, result; // 宣告變數表示重量和數量\n\n    // 提示使用者輸入 item 1 的重量\n    printf("Weight - Item1: ");\n    if (scanf("%lf", &wi1) != 1) { // 讀取並檢查輸入值\n        printf("Error: Please enter a valid number.\\n"); // 如果輸入無效，輸出錯誤訊息\n        return 1; // 返回非零值表示程式出錯\n    }\n    \n    // 提示使用者輸入 item 1 的數量\n    printf("No. of item1: ");\n    if (scanf("%lf", &ci1) != 1) { // 讀取並檢查輸入值\n        printf("Error: Please enter a valid number.\\n"); // 如果輸入無效，輸出錯誤訊息\n        return 1; // 返回非零值表示程式出錯\n    }\n    \n    // 提示使用者輸入 item 2 的重量\n    printf("Weight - Item2: ");\n    if (scanf("%lf", &wi2) != 1) { // 讀取並檢查輸入值\n        printf("Error: Please enter a valid number.\\n"); // 如果輸入無效，輸出錯誤訊息\n        return 1; // 返回非零值表示程式出錯\n    }\n    \n    // 提示使用者輸入 item 2 的數量\n    printf("No. of item2: ");\n    if (scanf("%lf", &ci2) != 1) { // 讀取並檢查輸入值\n        printf("Error: Please enter a valid number.\\n"); // 如果輸入無效，輸出錯誤訊息\n        return 1; // 返回非零值表示程式出錯\n    }\n    \n    // 計算平均值\n    result = ((wi1 * ci1) + (wi2 * ci2)) / (ci1 + ci2);\n    \n    // 輸出平均值\n    printf("Average Value = %f\\n", result);\n    \n    return 0; // 返回零表示程式正常結束\n}\n \n \n 2. 寫一個 C 程序，接受員工的 ID、一個月的總工作時間、他每小時收到的金額 \n #include <stdio.h>\n\nint main() {\n    char id[10];         // 宣告變數表示員工ID（最多10個字元）\n    int hour;            // 宣告變數表示工作時數\n    double value, salary; // 宣告變數表示每小時薪水和總薪水\n\n    // 使用一個變數存儲 scanf 的返回值以避免警告\n    int result;\n\n    // 提示用戶輸入員工ID\n    printf("Input the Employees ID(Max. 10 chars): ");\n    result = scanf("%9s", id); // 讀取並檢查輸入的ID，限制最多讀取9個字元\n\n    if (result != 1) { // 檢查 scanf 的返回值\n        printf("Error: Please enter a valid Employee ID.\\n");\n        return 1; // 返回1表示出錯\n    }\n\n    // ... 以下略，後續的程式碼保持不變 ...\n\n    return 0; // 返回0表示程式正常結束\n}\n \n \n 3. 寫一個 C 程序，接受三個整數並找出三個整數中的最大值 \n #include <stdio.h>\n#include <stdlib.h>\n\nint main()\n{\n    int x, y, z, result, max; // 宣告變數\n\n    // 提示用戶輸入第一個整數並存儲在 \'x\' 中\n    printf("\\nInput the first integer: ");\n    if (scanf("%d", &x) != 1) { // 檢查 scanf 的返回值\n        printf("Error: Please enter a valid integer.\\n");\n        return 1; // 返回1表示出錯\n    }\n\n    // 提示用戶輸入第二個整數並存儲在 \'y\' 中\n    printf("\\nInput the second integer: ");\n    if (scanf("%d", &y) != 1) { // 檢查 scanf 的返回值\n        printf("Error: Please enter a valid integer.\\n");\n        return 1; // 返回1表示出錯\n    }\n\n    // 提示用戶輸入第三個整數並存儲在 \'z\' 中\n    printf("\\nInput the third integer: ");\n    if (scanf("%d", &z) != 1) { // 檢查 scanf 的返回值\n        printf("Error: Please enter a valid integer.\\n");\n        return 1; // 返回1表示出錯\n    }\n\n    // 計算結果\n    result = (x + y + abs(x - y)) / 2;\n\n    // 計算最大值\n    max = (result + z + abs(result - z)) / 2;\n\n    // 輸出最大值\n    printf("\\nMaximum value of three integers: %d\\n", max);\n\n    return 0; // 返回0表示程式正常結束\n} \n \n 4. 寫一個 C 程序，根據給定的總行駛距離（整數值）（以公里為單位）和用過的燃料（以公升為單位，浮點數 - 2 位小數）計算自行車的平均消耗量 \n #include <stdio.h>\n\nint main() \n{\n    int x;    // 用來儲存總行駛公里數\n    float y;  // 用來儲存總耗油量\n\n    // 提示用戶輸入總行駛公里數並存儲在 \'x\' 中\n    printf("Input total distance in km: ");\n    if (scanf("%d", &x) != 1) { // 檢查 scanf 的返回值\n        printf("Error: Please enter a valid integer.\\n");\n        return 1; // 返回1表示出錯\n    }\n\n    // 提示用戶輸入總耗油量並存儲在 \'y\' 中\n    printf("Input total fuel spent in liters: ");\n    if (scanf("%f", &y) != 1) { // 檢查 scanf 的返回值\n        printf("Error: Please enter a valid float number.\\n");\n        return 1; // 返回1表示出錯\n    }\n\n    // 檢查總耗油量是否為0，以避免除以0的情況\n    if (y == 0) {\n        printf("Error: Total fuel spent cannot be zero.\\n");\n        return 1; // 返回1表示出錯\n    }\n\n    // 計算並輸出平均油耗\n    printf("Average consumption (km/lt): %.3f\\n", x / y);\n\n    return 0; // 返回0表示程式正常結束\n}\n \n \n 5. 用 C 語言寫一個程序，使用函數求任意數字的平方 \n #include <stdio.h>\n\ndouble square(double num) {\n    return (num * num);\n}\n\nint main() {\n    int num;\n    double n;\n    int scanfResult; // 變數用於儲存 scanf 的返回值\n\n    printf("\\n\\n 函式：計算任意數字的平方值 :\\n");\n    printf("------------------------------------------------\\n");\n\n    printf("輸入任意數字以計算平方值：");\n    scanfResult = scanf("%d", &num); // 將 scanf 的返回值儲存在變數中\n\n    if (scanfResult != 1) {\n        printf("輸入錯誤或無效的數字。\\n");\n        return 1; // 適當的錯誤處理\n    }\n\n    n = square(num);\n    printf("%d 的平方是：%.2f\\n", num, n);\n\n    return 0;\n} \n \n 6. 用 C 語言寫一個程序，使用函數交換兩個數字 \n #include<stdio.h>\n\nvoid swap(int *, int *);\n\nint main() {\n    int n1, n2;\n    int scanfResult1, scanfResult2; // 儲存 scanf 函式的返回值\n\n    printf("\\n\\n 函式 : 使用函式交換兩個數字 :\\n");\n    printf("------------------------------------------------\\n");\n\n    printf("輸入第一個數字 : ");\n    scanfResult1 = scanf("%d", &n1); // 儲存 scanf 函式的返回值\n\n    printf("輸入第二個數字 : ");\n    scanfResult2 = scanf("%d", &n2); // 儲存 scanf 函式的返回值\n\n    // 檢查 scanf 的返回值\n    if (scanfResult1 != 1 || scanfResult2 != 1) {\n        printf("錯誤的輸入。\\n");\n        return 1; // 適當的錯誤處理\n    }\n\n    printf("交換前 : n1 = %d, n2 = %d ", n1, n2);\n    swap(&n1, &n2);\n    printf("\\n交換後 : n1 = %d, n2 = %d \\n\\n", n1, n2);\n    \n    return 0;\n}\n\nvoid swap(int *p, int *q) {\n    int tmp;\n    tmp = *p;\n    *p = *q;\n    *q = tmp;\n} \n \n \n 7. 使用函數檢查給定數字是偶數還是奇數 \n #include <stdio.h>\n\nint checkOddEven(int n1)\n{   \n    return (n1 & 1);\n}\n\nint main()\n{\n    int n1;\n    int scanfResult; // 儲存 scanf 函式的返回值\n\n    printf("\\n\\n 函式：檢查數字是奇數還是偶數：\\n");\n    printf("------------------------------------------------\\n");\n\n    printf("輸入任意數字：");\n    scanfResult = scanf("%d", &n1); // 儲存 scanf 函式的返回值\n\n    if (scanfResult != 1) {\n        printf("無效的輸入。\\n");\n        return 1; // 適當的錯誤處理\n    }\n\n    if(checkOddEven(n1))\n    {\n        printf("輸入的數字是奇數。\\n\\n");\n    }\n    else\n    {\n        printf("輸入的數字是偶數。\\n\\n");\n    }\n    return 0;\n} \n \n \n 8. 使用函數求 1!/1+2!/2+3!/3+4!/4+5!/5 數列的和 \n #include <stdio.h>\n\nint fact(int);\n\nint main() {\n    int sum;\n    // 計算數列總和：1!/1 + 2!/2 + 3!/3 + 4!/4 + 5!/5\n    sum = fact(1) / 1 + fact(2) / 2 + fact(3) / 3 + fact(4) / 4 + fact(5) / 5;\n\n    printf("\\n\\n 函式：計算數列 1!/1 + 2!/2 + 3!/3 + 4!/4 + 5!/5 的總和 :\\n");\n    printf("----------------------------------------------------------\\n");\n\n    printf("數列總和為 : %d\\n\\n", sum);\n    return 0;\n}\n\n// 計算階乘的函式\nint fact(int n) {\n    int num = 0, f = 1;\n\n    // 計算階乘\n    while (num <= n - 1) {\n        f = f + f * num; // 這裡的階乘計算方式可能不正確\n        num++;\n    }\n    return f;\n} \n \n 9. 使用函數將十進制數轉換為二進制數 \n #include<stdio.h>\n\nlong toBin(int);\n\nint main()\n{\n    long bno;\n    int dno;\n    int scanfResult; // 儲存 scanf 函式的返回值\n\n    printf("\\n\\n 函式 : 十進制轉二進制 :\\n");\n    printf("-------------------------------------------\\n");\n    printf(" 輸入任意十進制數字 : ");\n\n    scanfResult = scanf("%d", &dno); // 儲存 scanf 函式的返回值\n\n    if (scanfResult != 1) {\n        printf("輸入錯誤或無效的數字。\\n");\n        return 1; // 適當的錯誤處理\n    }\n\n    bno = toBin(dno);\n    printf("\\n 二進制值為 : %ld\\n\\n", bno);\n\n    return 0;\n}\n\nlong toBin(int dno)\n{\n    long bno = 0, remainder, f = 1;\n    while(dno != 0)\n    {\n        remainder = dno % 2;\n        bno = bno + remainder * f;\n        f = f * 10;\n        dno = dno / 2;\n    }\n    return bno;\n} \n \n 10. 使用函數檢查一個數是否為質數 \n #include <stdio.h>\n\nint PrimeOrNot(int);\n\nint main() {\n    int n1, prime;\n    int scanfResult; // 儲存 scanf 函式的返回值\n\n    printf("\\n\\n 函式 : 檢查一個數字是否為質數 :\\n");\n    printf("---------------------------------------------------------------\\n");\n\n    printf(" 輸入一個正數 : ");\n    scanfResult = scanf("%d", &n1); // 儲存 scanf 函式的返回值\n\n    // 檢查 scanf 的返回值以確保成功讀取一個整數\n    if (scanfResult != 1) {\n        printf("輸入無效。\\n");\n        return 1; // 適當的錯誤處理\n    }\n\n    prime = PrimeOrNot(n1);\n\n    if (prime == 1)\n        printf(" 數字 %d 是質數。\\n", n1);\n    else\n        printf(" 數字 %d 不是質數。\\n", n1);\n\n    return 0;\n}\n\nint PrimeOrNot(int n1) {\n    int i = 2;\n    while (i <= n1 / 2) {\n        if (n1 % i == 0)\n            return 0; // 若能被除了1和自身以外的數整除，則不是質數\n        else\n            i++;\n    }\n    return 1; // 若無法被其他數整除，則是質數\n} \n \n \n \n \n', 'tags': '', 'url': '上課內容.html'}, {'title': '練習一', 'text': '1.編寫一個 C 程式來列印您的姓名、出生日期和手機號碼 \n #include <stdio.h>\n\nint main()  \n{\n    // Print Name\n    printf("Name   : Angel\\n"); \n\n    // Print Date of Birth\n    printf("DOB    : October 23, 2004\\n"); \n\n    // Print Mobile Number\n    printf("Mobile : 08-9999999999\\n"); \n\n    // Indicate successful execution\n    return(0); \n} \n \n \n 2. 編寫一個C 程式來取得您正在使用的C 版本 \n #include <stdio.h>\n\nint main(int argc, char** argv) {\n    // Check for C standard version\n    #if __STDC_VERSION__ >=  201710L\n        printf("We are using C18!\\n");\n    #elif __STDC_VERSION__ >= 201112L\n        printf("We are using C11!\\n");\n    #elif __STDC_VERSION__ >= 199901L\n        printf("We are using C99!\\n");\n    #else\n        printf("We are using C89/C90!\\n");\n    #endif\n\n    // Indicate successful execution\n    return 0;\n} \n \n \n 3. 寫一個 C 程序，使用哈希 (#) 列印一個區塊 F，其中 F 的高度為 6 個字符，寬度為 5 個和 4 個字符。 並且還列印一個非常大的“C” \n #include <stdio.h>\n\nint main() \n{\n    // Print top line of pattern\n    printf("    ######\\n");\n\n    // Print second line of pattern\n    printf("  ##      ##\\n");\n\n    // Print lines 3 to 7 of pattern\n    printf(" #\\n");\n    printf(" #\\n");\n    printf(" #\\n");\n    printf(" #\\n");\n    printf(" #\\n");\n\n    // Print bottom line of pattern\n    printf("  ##      ##\\n");\n\n    // Print last line of pattern\n    printf("    ######\\n");\n\n    return(0);\n} \n \n \n 4. 寫一個C 程序，反向列印下列字元 \n #include <stdio.h>\n\nint main() \n{\n    // Declare and initialize character variables\n    char char1 = \'X\';\n    char char2 = \'M\';\n    char char3 = \'L\';\n\n    // Print the original and reversed characters\n    printf("The reverse of %c%c%c is %c%c%c\\n",\n        char1, char2, char3,\n        char3, char2, char1);\n\n    return(0);\n} \n \n \n 5. 寫一個 C 程式來計算高 7 英吋、寬 5 英吋的矩形的周長和麵積 \n #include <stdio.h> \n\n/* \n   Variables to store the width and height of a rectangle in inches \n*/\nint width;          \nint height;         \n\nint area;           /* Variable to store the area of the rectangle */\nint perimeter;      /* Variable to store the perimeter of the rectangle */\n\nint main() {\n    /* Assigning values to height and width */\n\theight = 7;\n\twidth = 5;\n\n    /* Calculating the perimeter of the rectangle */\n    perimeter = 2*(height + width);\n\tprintf("Perimeter of the rectangle = %d inches\\n", perimeter);\n\t\n    /* Calculating the area of the rectangle */\n\tarea = height * width;\n\tprintf("Area of the rectangle = %d square inches\\n", area);\n\n    return(0);\n} \n \n \n 6. 寫一個 C 程式來計算給定半徑的圓的周長和麵積 \n #include <stdio.h>\n\nint main() {\n   int radius;      /* Variable to store the radius of the circle */\n   float area, perimeter;    /* Variables to store the area and perimeter of the circle */ \n   radius = 6;      /* Assigning a value to the radius */\n\n   /* Calculating the perimeter of the circle */\n   perimeter = 2 * 3.14 * radius;\n   printf("Perimeter of the Circle = %f inches\\n", perimeter);\n\n   /* Calculating the area of the circle */\n   area = 3.14 * radius * radius;\n   printf("Area of the Circle = %f square inches\\n", area);\n\n   return(0);\n} \n \n \n 7. 寫一個C 程式來顯示多個變數 \n #include <stdio.h>\n\nint main()\n{\n    int a = 125, b = 12345;        /* Declare and initialize integer variables */\n    long ax = 1234567890;          /* Declare and initialize long integer variable */\n    short s = 4043;                /* Declare and initialize short integer variable */\n    float x = 2.13459;             /* Declare and initialize floating-point variable */\n    double dx = 1.1415927;         /* Declare and initialize double precision variable */\n    char c = \'W\';                  /* Declare and initialize character variable */\n    unsigned long ux = 2541567890; /* Declare and initialize unsigned long integer variable */\n\n    /* Various arithmetic operations and type conversions */\n    printf("a + c =  %d\\n", a + c);\n    printf("x + c = %f\\n", x + c);\n    printf("dx + x = %f\\n", dx + x);\n    printf("((int) dx) + ax =  %ld\\n", ((int) dx) + ax);\n    printf("a + x = %f\\n", a + x);\n    printf("s + b =  %d\\n", s + b);\n    printf("ax + b = %ld\\n", ax + b);\n    printf("s + c =  %hd\\n", s + c);\n    printf("ax + c = %ld\\n", ax + c);\n    printf("ax + ux = %lu\\n", ax + ux);\n\n    return 0;\n} \n \n \n 8. 編寫一個 C 程序，將指定的日期轉換為年、週和日 \n #include <stdio.h>\n\nint main()\n{\n    int days, years, weeks;\n\n    days = 1329; // Total number of days\n\n    // Converts days to years, weeks and days\n    years = days/365; // Calculate years\n    weeks = (days % 365)/7; // Calculate weeks\n    days = days - ((years*365) + (weeks*7)); // Calculate remaining days\n\n    // Print the results\n    printf("Years: %d\\n", years);\n    printf("Weeks: %d\\n", weeks);\n    printf("Days: %d \\n", days);\n\n    return 0;\n} \n \n \n 9. 寫一個 C 程序，接受使用者提供的兩個整數併計算這兩個整數的和 \n #include <stdio.h>\n\nint main() {\n    int x, y;\n    int result1, result2; // 用于存储 scanf 的返回值\n\n    // 获取第一个整数\n    printf("Input the first integer: ");\n    result1 = scanf("%d", &x);\n    if (result1 != 1) {\n        printf("Error: Please enter an integer.\\n");\n        return 1;\n    }\n\n    // 获取第二个整数\n    printf("Input the second integer: ");\n    result2 = scanf("%d", &y);\n    if (result2 != 1) {\n        printf("Error: Please enter an integer.\\n");\n        return 1;\n    }\n\n    // 计算并输出它们的和\n    printf("Sum of the two integers = %d\\n", x + y);\n\n    return 0;\n}\n \n \n \n 10. 寫一個 C 程序，接受使用者提供的兩個整數併計算這兩個整數的乘積 \n #include <stdio.h>\n\nint main() {\n    int x, y;\n    int result_x, result_y; // 用於儲存 scanf 的返回值\n\n    // 獲取第一個整數\n    printf("輸入第一個整數：");\n    result_x = scanf("%d", &x);\n    if (result_x != 1) {\n        printf("錯誤：請輸入整數。\\n");\n        return 1;\n    }\n\n    // 獲取第二個整數\n    printf("輸入第二個整數：");\n    result_y = scanf("%d", &y);\n    if (result_y != 1) {\n        printf("錯誤：請輸入整數。\\n");\n        return 1;\n    }\n\n    // 計算並輸出它們的乘積\n    printf("這兩個整數的乘積 = %d\\n", x * y);\n\n    return 0;\n}\n \n \n \n', 'tags': '', 'url': '練習一.html'}, {'title': 'About', 'text': ' https://github.com/mdecycu/cmsite  \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};